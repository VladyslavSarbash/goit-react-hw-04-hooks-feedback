{"version":3,"sources":["components/Feedback/Statistics/statistics.js","components/Feedback/FeedbackOptions/feedbackOptions.js","components/Feedback/Notification/notification.js","components/Feedback/feedback.js","App.js","index.js","components/Feedback/feedback.module.css","components/Feedback/FeedbackOptions/feedbackOption.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOption","option","onLeaveFeedback","map","i","className","s","button","name","type","onClick","shortid","generate","Notification","message","Feedback","useState","state","setState","totalFeedback","section","target","prevState","Math","floor","positiveFeedback","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAEe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,4CACA,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,U,oCCZS,SAASC,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,gBAC/C,OACE,8BACGD,EAAOE,KAAI,SAAAC,GACV,OACE,wBAEEC,UAAWC,IAAEC,OACbC,KAAMJ,EACNK,KAAK,SACLC,QAASR,EALX,SAOGE,GANIO,IAAQC,iBCRV,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAKA,ICGC,SAASC,IACtB,MAA0BC,mBAAS,CACjCrB,KAAM,EACNC,QAAS,EACTC,IAAK,IAHP,mBAAOoB,EAAP,KAAcC,EAAd,KAaMC,EAAgB,WAEpB,OAD+BF,EAAvBtB,KAAuBsB,EAAjBrB,QAAiBqB,EAARpB,KAUzB,OACE,0BAASQ,UAAWC,IAAEc,QAAtB,UACE,uDACA,cAACpB,EAAD,CACEC,OAAQ,CAAC,OAAQ,UAAW,OAC5BC,gBAvBiB,SAAC,GAAgB,IAAdmB,EAAa,EAAbA,OACxBH,GAAS,SAAAI,GAAS,kCACbA,GADa,kBAEfD,EAAOb,KAAOc,EAAUD,EAAOb,MAAQ,UAsBnB,IAApBW,IACC,cAACN,EAAD,CAAcC,QAAQ,sBAEtB,cAACpB,EAAD,CACEC,KAAMsB,EAAMtB,KACZC,QAASqB,EAAMrB,QACfC,IAAKoB,EAAMpB,IACXC,MAAOqB,IACPpB,mBArBiB,WACvB,IAAQJ,EAAuBsB,EAAvBtB,KAAMC,EAAiBqB,EAAjBrB,QAASC,EAAQoB,EAARpB,IACvB,OAAa,IAATF,EAAmB,EAChB4B,KAAKC,MAAO7B,GAAQA,EAAOC,EAAUC,GAAQ,KAkB1B4B,QCvCfC,MAJf,WACE,OAAO,cAACX,EAAD,KCCTY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,4B,kBCA5BD,EAAOC,QAAU,CAAC,OAAS,kC","file":"static/js/main.dee5e941.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './feedbackOption.module.css';\r\n\r\nexport default function FeedbackOption({ option, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {option.map(i => {\r\n        return (\r\n          <button\r\n            key={shortid.generate()}\r\n            className={s.button}\r\n            name={i}\r\n            type=\"button\"\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {i}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOption.propTypes = {\r\n  option: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <h2>{message}</h2>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React, { useState } from 'react';\r\nimport s from './feedback.module.css';\r\nimport Statistics from './Statistics/statistics';\r\nimport FeedbackOption from './FeedbackOptions/feedbackOptions';\r\nimport Notification from './Notification/notification';\r\n\r\nexport default function Feedback() {\r\n  const [state, setState] = useState({\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  });\r\n\r\n  const choiceFeedback = ({ target }) => {\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      [target.name]: prevState[target.name] + 1,\r\n    }));\r\n  };\r\n\r\n  const totalFeedback = () => {\r\n    const { good, neutral, bad } = state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const positiveFeedback = () => {\r\n    const { good, neutral, bad } = state;\r\n    if (good === 0) return 0;\r\n    return Math.floor((good / (good + neutral + bad)) * 100);\r\n  };\r\n\r\n  return (\r\n    <section className={s.section}>\r\n      <h1>Please leave feedback</h1>\r\n      <FeedbackOption\r\n        option={['good', 'neutral', 'bad']}\r\n        onLeaveFeedback={choiceFeedback}\r\n      />\r\n      {totalFeedback() === 0 ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <Statistics\r\n          good={state.good}\r\n          neutral={state.neutral}\r\n          bad={state.bad}\r\n          total={totalFeedback()}\r\n          positivePercentage={positiveFeedback()}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","import './App.css';\r\nimport Feedback from './components/Feedback/feedback';\r\n\r\nfunction App() {\r\n  return <Feedback />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"feedback_section__3JFJZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedbackOption_button__16Urr\"};"],"sourceRoot":""}