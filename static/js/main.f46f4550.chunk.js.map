{"version":3,"sources":["components/Feedback/FeedbackOptions/feedbackOption.module.css","components/Feedback/Statistics/statistics.js","components/Feedback/FeedbackOptions/feedbackOptions.js","components/Feedback/Notification/notification.js","components/Feedback/feedback.js","App.js","index.js","components/Feedback/feedback.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOption","option","onLeaveFeedback","map","i","className","s","button","name","type","onClick","shortid","generate","Notification","message","Feedback","state","choiceFeedback","target","setState","prevState","totalFeedback","positiveFeedback","Math","floor","this","section","Component","propTypes","PropTypes","number","string","array","func","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,OAAS,iC,+MCDZ,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,4CACA,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,U,sCCXS,SAASC,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,gBAE/C,OACE,8BACGD,EAAOE,KAAI,SAAAC,GACV,OACE,wBAEEC,UAAWC,IAAEC,OACbC,KAAMJ,EACNK,KAAK,SACLC,QAASR,EALX,SAOGE,GANIO,IAAQC,iBCVV,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAKA,I,ICMRC,E,4MACJC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,eAAiB,YAAiB,IAAdC,EAAa,EAAbA,OAClB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOV,KAAOY,EAAUF,EAAOV,MAAQ,O,EAI5Ca,cAAgB,WACd,MAA+B,EAAKL,MACpC,OADA,EAAQrB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzByB,iBAAmB,WACjB,MAA+B,EAAKN,MAA5BrB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OAAa,IAATF,EAAmB,EAChB4B,KAAKC,MAAO7B,GAAQA,EAAOC,EAAUC,GAAQ,M,4CAGtD,WACE,MAA+B4B,KAAKT,MAA5BrB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,0BAASQ,UAAWC,IAAEoB,QAAtB,UACE,uDACA,cAAC1B,EAAD,CACEC,OAAQ,CAAC,OAAQ,UAAW,OAC5BC,gBAAiBuB,KAAKR,iBAEE,IAAzBQ,KAAKJ,gBACJ,cAACR,EAAD,CAAcC,QAAQ,sBAEtB,cAACpB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,KAAKJ,gBACZtB,mBAAoB0B,KAAKH,4B,GA1CdK,aAkDvBjC,EAAWkC,UAAY,CACrBjC,KAAMkC,IAAUC,OAChBlC,QAASiC,IAAUC,OACnBjC,IAAKgC,IAAUC,OACfhC,MAAO+B,IAAUC,OACjB/B,mBAAoB8B,IAAUC,QAGhCjB,EAAae,UAAY,CACvBd,QAASe,IAAUE,QAGrB/B,EAAe4B,UAAY,CACzB3B,OAAQ4B,IAAUG,MAClB9B,gBAAiB2B,IAAUI,MAGdlB,QCnEAmB,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B/C,EAAOC,QAAU,CAAC,QAAU,6B","file":"static/js/main.f46f4550.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedbackOption_button__2nraf\"};","export default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n}\n","import shortid from 'shortid';\nimport s from './feedbackOption.module.css';\n\nexport default function FeedbackOption({ option, onLeaveFeedback }) {\n  // const { good, neutral, bad } = onLeaveFeedback;\n  return (\n    <div>\n      {option.map(i => {\n        return (\n          <button\n            key={shortid.generate()}\n            className={s.button}\n            name={i}\n            type=\"button\"\n            onClick={onLeaveFeedback}\n          >\n            {i}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","export default function Notification({ message }) {\n  return <h2>{message}</h2>;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './feedback.module.css';\nimport Statistics from './Statistics/statistics';\nimport FeedbackOption from './FeedbackOptions/feedbackOptions';\nimport Notification from './Notification/notification';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  choiceFeedback = ({ target }) => {\n    this.setState(prevState => ({\n      [target.name]: prevState[target.name] + 1,\n    }));\n  };\n\n  totalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positiveFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    if (good === 0) return 0;\n    return Math.floor((good / (good + neutral + bad)) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <section className={s.section}>\n        <h1>Please leave feedback</h1>\n        <FeedbackOption\n          option={['good', 'neutral', 'bad']}\n          onLeaveFeedback={this.choiceFeedback}\n        />\n        {this.totalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.totalFeedback()}\n            positivePercentage={this.positiveFeedback()}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nFeedbackOption.propTypes = {\n  option: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default Feedback;\n","import './App.css';\nimport Feedback from './components/Feedback/feedback';\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"feedback_section__2S2O9\"};"],"sourceRoot":""}